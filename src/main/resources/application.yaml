server:
  port: 9191
  error:
    include-message: never

management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${random.value}

spring:
  application:
    name: GATEWAY-SERVICE
  
  # OAuth2 Resource Server Configuration for Keycloak
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/myrealm
          jwk-set-uri: http://localhost:8081/realms/myrealm/protocol/openid-connect/certs
  
  # Redis Configuration for Regional Caching
  data:
    redis:
      host: localhost
      port: 6379
      password: mypassword
      database: 0
      timeout: 5s
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2s

  # Cloud Gateway Configuration
  cloud:
    gateway:
      # Global filters configuration
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenish-rate: 100
            redis-rate-limiter.burst-capacity: 200
            key-resolver: "#{@ipKeyResolver}"
        - name: Retry
          args:
            retries: 3
            series: SERVER_ERROR
            methods: GET,POST,PUT,DELETE
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - name: TokenRelay

      # Route definitions with regional routing
      routes:
        # =========================
        # PRODUCT SERVICE ROUTES
        # =========================
        
        # US Region Product Service
        - id: PRODUCT-SERVICE-US
          uri: lb://PRODUCT-SERVICE-US
          predicates:
            - Path=/api/v1/products/**,/api/v1/inventories/**,/api/v1/customer/products/**
            - Header=X-Region-Code, us
          filters:
            - name: CircuitBreaker
              args:
                name: product-service-us
                fallbackUri: forward:/fallback/product
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 200
                redis-rate-limiter.burst-capacity: 400
                key-resolver: "#{@regionKeyResolver}"
        
        # EU Region Product Service  
        - id: PRODUCT-SERVICE-EU
          uri: lb://PRODUCT-SERVICE-EU
          predicates:
            - Path=/api/v1/products/**,/api/v1/inventories/**,/api/v1/customer/products/**
            - Header=X-Region-Code, eu
          filters:
            - name: CircuitBreaker
              args:
                name: product-service-eu
                fallbackUri: forward:/fallback/product
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 200
                redis-rate-limiter.burst-capacity: 400
        
        # ASIA Region Product Service
        - id: PRODUCT-SERVICE-ASIA
          uri: lb://PRODUCT-SERVICE-ASIA
          predicates:
            - Path=/api/v1/products/**,/api/v1/inventories/**,/api/v1/customer/products/**
            - Header=X-Region-Code, asia
          filters:
            - name: CircuitBreaker
              args:
                name: product-service-asia
                fallbackUri: forward:/fallback/product
        
        # Fallback Product Service (Default US)
        - id: PRODUCT-SERVICE-DEFAULT
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/products/**,/api/v1/inventories/**,/api/v1/customer/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: product-service-default
                fallbackUri: forward:/fallback/product

        # =========================
        # AUTH SERVICE ROUTES
        # =========================
        
        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 50
                redis-rate-limiter.burst-capacity: 100

        # =========================
        # ORDER SERVICE ROUTES
        # =========================
        
        # Regional Order Services
        - id: ORDER-SERVICE-REGIONAL
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackUri: forward:/fallback/order

        # =========================
        # CART SERVICE ROUTES
        # =========================
        
        - id: CART-SERVICE
          uri: lb://CART-SERVICE
          predicates:
            - Path=/api/v1/cart/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 100
                redis-rate-limiter.burst-capacity: 200

        # =========================
        # PAYMENT SERVICE ROUTES
        # =========================
        
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/v1/payments/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 50
                redis-rate-limiter.burst-capacity: 100

        # =========================
        # PROMOTION SERVICE ROUTES
        # =========================
        
        - id: PROMOTION-SERVICE
          uri: lb://PROMOTION-SERVICE
          predicates:
            - Path=/api/v1/promotions/**,/api/v1/discounts/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 100
                redis-rate-limiter.burst-capacity: 200

        # =========================
        # SHIPPING SERVICE ROUTES
        # =========================
        
        - id: SHIPPING-SERVICE
          uri: lb://SHIPPING-SERVICE
          predicates:
            - Path=/api/v1/shipping/**

      # Global timeout configuration
      httpclient:
        connect-timeout: 5000
        response-timeout: 30s
        
# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      product-service-us:
        register-health-indicator: true
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
      product-service-eu:
        register-health-indicator: true
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
      product-service-asia:
        register-health-indicator: true
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50

# Logging Configuration
logging:
  level:
    org:
      springframework:
        cloud:
          gateway: DEBUG
    com:
      winnguyen1905:
        gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Custom Gateway Properties
gateway:
  regional-routing:
    enabled: true
    cache-ttl: 24h
    fallback-region: us
    geo-api:
      timeout: 5s
      retry-attempts: 2